<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 			column="prod_no" 			jdbcType="NUMERIC"/>
		<result property="prodName" 			column="prod_name" 			jdbcType="VARCHAR"/>
		<result property="prodDetail"	column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 	column="manufacture_day" 		jdbcType="VARCHAR" />
		<result property="price" 				column="price" 					jdbcType="NUMERIC" />
		<result property="fileName" 				column="image_file" 					jdbcType="VARCHAR" />
		<result property="regDate" 			column="reg_date" 		jdbcType="DATE" />

		</resultMap>
	
	
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO product (prod_no, prod_name , prod_detail , manufacture_day , price, image_file, reg_date) 
		VALUES	 (seq_product_prod_no.nextval, #{prodName} , #{prodDetail} , #{manuDate:VARCHAR} , 
							#{price} , #{fileName:VARCHAR} , SYSDATE )
	 </insert>
	 
	 
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="string"	resultMap="productSelectMap">
		SELECT
		prod_no , prod_name , prod_detail , manufacture_day,  price ,  image_file , reg_date 		
		FROM product 
		WHERE prod_no = #{value}
	 </select>
	 
	 
	 
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name 	= #{prodName} ,
			prod_detail	= #{prodDetail},
			manufacture_day = #{manuDate} ,
			price		=	#{price},
			image_file= #{fileName}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
		 
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	
	  	
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT p.prod_no, p.prod_name, p.price , p.reg_date, p.prod_detail, NVL(t.tran_status_code,'0') 
						FROM product p, transaction t
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				p.prod_no like '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				p.prod_name like '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				p.price like '%'||#{searchKeyword}||'%'
													</if>
													
												</where>
											</if>
											ORDER BY p.prod_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.prod_no, p.prod_name, p.price , p.reg_Date, NVL(t.tran_status_code,'0') 
						FROM product p, transaction t
						
										<where>
											<if test="menu == 'manage'">
											p.prod_no = t.prod_no(+)
											</if>
						
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 		prod_no like '%'||#{searchKeyword}||'%'
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		prod_name like '%'||#{searchKeyword}||'%'
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
						 		price like '%'||#{searchKeyword}||'%'
								</if>
								
							</where>
						</if> </where>) countTable						
	 </select>
	 
	
</mapper>